{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","handleMode","htmlFor","modetext","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","backgroundColor","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","length","Alert","alert","role","word","lower","charAt","slice","toupper","message","App","modeText","setTextMode","_useState3","_useState4","setMode","_useState5","_useState6","setAlert","setTimeout","aboutme","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0ef3df57.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">Home</a>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">{props.aboutme}</a>\r\n                </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.handleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.modetext}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const toupper = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\",\"success\");\r\n    }\r\n\r\n    const tolower = ()=>{ \r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\",\"success\");\r\n    }\r\n\r\n    const handleclear = ()=>{ \r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared\",\"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n    \r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value) \r\n    }\r\n\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text); \r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n\r\n   \r\n\r\n    const [text, setText] = useState(''); \r\n    // text = \"new text\"; // Wrong way to change the state\r\n    // setText(\"new text\"); // Correct way to change the state\r\n    return (\r\n        <>\r\n\r\n        <div className=\"container\" style={{color:props.mode==='light'?'#617588':'white'}}> \r\n            <h1>{props.title}</h1>\r\n            <div className=\"mb-3\"> \r\n            <textarea className=\"form-control\" style={{color:props.mode==='light'?'#617588':'white', backgroundColor:props.mode==='dark'?'#617588':'white'}} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={toupper}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={tolower}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleclear}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n        </div>\r\n\r\n        <div className=\"container\" style={{color:props.mode==='light'?'#617588':'white'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 *  text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in above box to preview.\"}</p>\r\n        </div>\r\n\r\n        {/* <button className=\"btn btn-primary mx-1 my-1\" onClick={handlemode}>{modeText}</button> */}\r\n\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const toupper=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() +lower.slice(1);\r\n    }\r\n\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{toupper(props.alert.type)}</strong> : {props.alert.message}\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  \n  const [modeText,setTextMode]=useState('Enable dark mode');\n  const [mode,setMode]=useState('light');\n  const [alert,setAlert]=useState(null);\n\n  const handleMode=()=>{\n    if(mode==='light')\n    {\n      setMode('dark');\n      setTextMode('Enable light mode');\n      document.body.style.backgroundColor='#617588';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n    }\n    else \n    {\n      setMode('light');\n      setTextMode('Enable dark mode');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n    }\n\n  }\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      message: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n\n  }\n\n  return (\n    <>\n        <Navbar title=\"TextUtils\" aboutme=\"About \" mode={mode} handleMode={handleMode} modetext={modeText} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Textform title=\"Write your text below.\" mode={mode} showAlert={showAlert}/>\n        </div>\n    </>\n  );\n}\n\nexport default App; \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}